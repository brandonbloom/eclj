(ns eclj.ext
  (:refer-clojure :exclude [eval])
  (:require [eclj.common :refer (map->Syntax)]
            [eclj.ns]))

(defn ns-env []
  (eclj.env/ns-env))

;;XXX quasi-primitive
(defmacro raise [effect]
  `(eclj.ext/raise ~effect))

;;XXX quasi-primitive
(defmacro handle-with [handler & body]
  `(eclj.ext/handle-with ~handler ~@body))

(defn eval
  "Like eclj.core/eval, but supports raising effects and accepts an optional
   environment as a second argument."
  ([form] (eval form (ns-env)))
  ([form env]
   (raise (eclj.eval/effect form env))))
